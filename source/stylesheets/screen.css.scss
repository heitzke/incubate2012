//
// Main Stylesheet
//

@import "compass";
@import "compass/css3";
@import "responsive";

// Based on [Eric Meyer's reset 2.0](http://meyerweb.com/eric/tools/css/reset/index.html)
// Global reset rules.
// For more specific resets, use the reset mixins provided below
@mixin global-reset {
  html, body, div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed, 
  figure, figcaption, footer, header, hgroup, 
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video {
    @include reset-box-model;
    @include reset-font; }
  body {
    @include reset-body; }
  ol, ul {
    @include reset-list-style; }
  table {
    @include reset-table; }
  caption, th, td {
    @include reset-table-cell; }
  q, blockquote {
    @include reset-quotation; }
  a img {
    @include reset-image-anchor-border; }
  @include reset-html5; }

// Reset all elements within some selector scope. To reset the selector itself,
// mixin the appropriate reset mixin for that element type as well. This could be
// useful if you want to style a part of your page in a dramatically different way.
@mixin nested-reset {
  div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed, 
  figure, figcaption, footer, header, hgroup, 
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video {
    @include reset-box-model;
    @include reset-font; }
  table {
    @include reset-table; }
  caption, th, td {
    @include reset-table-cell; }
  q, blockquote {
    @include reset-quotation; }
  a img {
    @include reset-image-anchor-border; } }

// Reset the box model measurements.
@mixin reset-box-model {
  margin: 0;
  padding: 0;
  border: 0; }

// Reset the font and vertical alignment.
@mixin reset-font {
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

// Resets the outline when focus.
// For accessibility you need to apply some styling in its place.
@mixin reset-focus {
  outline: 0; }

// Reset a body element.
@mixin reset-body {
  line-height: 1; }

// Reset the list style of an element.
@mixin reset-list-style {
  list-style: none; }

// Reset a table
@mixin reset-table {
  border-collapse: collapse;
  border-spacing: 0; }

// Reset a table cell (`th`, `td`)
@mixin reset-table-cell {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

// Reset a quotation (`q`, `blockquote`)
@mixin reset-quotation {
  quotes: none;
  &:before, &:after {
    content: ""; 
    content: none; } }

// Resets the border.
@mixin reset-image-anchor-border {
  border: none; }

// Unrecognized elements are displayed inline.
// This reset provides a basic reset for block html5 elements
// so they are rendered correctly in browsers that don't recognize them
// and reset in browsers that have default styles for them.
@mixin reset-html5 {
  #{elements-of-type(html5-block)} {
    display: block; } }

// Resets the display of inline and block elements to their default display
// according to their tag type. Elements that have a default display that varies across
// versions of html or browser are not handled here, but this covers the 90% use case.
// Usage Example:
//
//     // Turn off the display for both of these classes
//     .unregistered-only, .registered-only
//       display: none
//     // Now turn only one of them back on depending on some other context.
//     body.registered
//       +reset-display(".registered-only")
//     body.unregistered
//       +reset-display(".unregistered-only")
@mixin reset-display($selector: "", $important: false) {
  #{append-selector(elements-of-type("inline"), $selector)} {
    @if $important {
      display: inline !important; }
    @else {
      display: inline; } }
  #{append-selector(elements-of-type("block"), $selector)} {
    @if $important {
      display: block !important; }
    @else {
      display: block; } } }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, font, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  background: transparent;
}

body {line-height: 1; color: black; background: white;}
a img {border:none;}
ins {text-decoration: none;}
del {text-decoration: line-through;}

:focus {
  -moz-outline:0;
  outline:0;
  outline-offset:0;
}

/* tables still need 'cellspacing="0"' in the markup */
table {border-collapse: collapse; border-spacing: 0;}
caption, th, td {text-align: left; font-weight: normal;}

blockquote, q {quotes: none;}
blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}
@font-face {
    font-family: 'LeagueGothicRegular';
    src: url('League_Gothic-webfont.eot');
    src: url('League_Gothic-webfont.eot?#iefix') format('embedded-opentype'),
         url('League_Gothic-webfont.woff') format('woff'),
         url('League_Gothic-webfont.ttf') format('truetype'),
         url('League_Gothic-webfont.svg#LeagueGothicRegular') format('svg');
    font-weight: normal;
    font-style: normal;
}

html {
  height: 100%;
  width: 100%;
  background: #fff;
  body {
    @include linear-gradient(#f3f6f7, #d5e3ea);
    background-color: #F3F6F7;
    height: auto;
    width: 100%;
    font-family: sans-serif;
    #content-bg {
      @include linear-gradient(#f5f7f8, #dfe9ee);
      background-color: #f5f7f8;
      margin: 0 auto;
      height: auto !important;
      height: 100%;
      #content {
        padding-bottom: 191px;
        background:url(/images/cityscape.png) bottom center no-repeat;
      }
    }
  }
}
header, .fixed_content {
  z-index: 5;
  position:relative;
}
.fixed_content {
  p {
    margin-bottom: 15px;
  }
}
.push {
  height: 191px;
}
.cityscape {
  background:url(/images/cityscape.png) bottom center no-repeat;
  bottom: 54px;
  display: block;
  height: 191px;
  z-index: 1;
}
footer {
  display:block;
  height: 58px;
  width: 100%;
  background:url(/images/footer_striped.jpg) bottom center no-repeat;
  background-color: #fff;
  p {
    display: inline-block;
  }
  .twitter-share-button {
    margin: 10px 0 0 17px;
    display: inline-block;
    vertical-align: top;
    overflow:hidden;
    
  }
  .fb-like {
    margin-top: 10px;
  }
}
#fb-root {
  display: none;
}
.logo {
  a {
  display: inline-block;
  background:url(/images/logo.png) 0 0 no-repeat;
  width: 306px;
  height: 70px;
  margin-top: 10px;
  position: relative;
  &:active {
    top: 1px;
    }
  }
}
nav {
  margin-bottom: 15px;
  ul {
    margin-bottom: 0;
    li {      
      display: inline-block;
      position: relative;
      a {
        text-decoration:none;
        text-transform: lowercase;
        color: #74858a;
        font-family: 'cabin', 'helvetica', sans-serif;
        position: relative;
        &:hover {
          color: #3d4c50;
        }
        &:active {
          top: 1px;
        }
      }
    }
  }
}
h2.main-text {
  word-wrap:break-word;
  .development {
    font-family: 'holtwood one sc', serif;
    color: #596c72;
    font-weight: lighter;
  }
  .salary {
    color: #15a29b;
    font-family: 'quicksand', sans-serif;
    font-style: italic;
    font-weight: lighter;
    display: block;
    text-transform: uppercase;
  }
  .ampersand {
    font-family: 'alice', serif;
    color: #e6cc88;
    font-weight: lighter;
    display: inline-block;
  }
  .expenses {
    font-family: 'cabin', sans-serif;
    color: #97c4de;
    font-weight: lighter;
  }
}
h2.title {
  color: #15a29b;
  font-size:2em;
  font-family: 'cabin', sans-serif;
  margin: 0 0 3% 0;
}
img {
  max-width: 100%;
}
h3 {
  font-family: 'cabin', sans-serif;
  color: #11a49d;
  margin: 0 0 5px 0;
  font-size: 1.3em;
  font-weight: lighter;
}
h4 {
  margin: 5px 0 10px 0;
  color: #596C72;
  font-size: 1.4em;
}
p {
  color: #74858a;
  font-family: 'cabin', sans-serif;
  margin-bottom: 5px;
}
.hide-text {
text-indent: 100%;
white-space: nowrap;
overflow: hidden;
}

ul {
  margin: 0 0 10px 0;
  padding: 0;
  list-style: none;
  li {
    margin: 5px 0 10px 0;
    color:#002B36;
    font-size: 1.3em;
    ul {
      list-style: disc;
      color:#74858A;
      li {
        margin-left: 25px;
        color:#74858A;
        font-size: .8em;
        
        ul {
          list-style: disc;
          li {
            font-size: .9em;
          }
        }
      }
    }
  }
}
html.ie8 {
  h2.main-text {
    margin: 25px 0 20px 0;
    .development {
      font-size: 3.34em;
    }
    .salary {
      font-size: 3.9em;
      margin-left: -4px;
    }
  }
}
